syntax = "proto3";

package metadata.v1;

import "google/protobuf/descriptor.proto";

option go_package = "github.com/fraser-isbester/federated-gql/gen/go/metadata/v1;metadatav1";

// Relationship type enumerates the possible types of entity relationships
enum RelationshipType {
  // Default relationship type
  RELATIONSHIP_TYPE_UNSPECIFIED = 0;
  // One-to-one relationship
  RELATIONSHIP_TYPE_ONE_TO_ONE = 1;
  // One-to-many relationship
  RELATIONSHIP_TYPE_ONE_TO_MANY = 2;
  // Many-to-one relationship
  RELATIONSHIP_TYPE_MANY_TO_ONE = 3;
  // Many-to-many relationship
  RELATIONSHIP_TYPE_MANY_TO_MANY = 4;
}

// Relationship defines properties of an entity relationship
message Relationship {
  // Type of relationship (one-to-one, one-to-many, etc.)
  RelationshipType type = 1;
  
  // Fully qualified type reference (package.v1.Type)
  // Example: "user.v1.User"
  // If the field is already a message type, this can be omitted
  string target_type = 2;
  
  // Reference to the field in the target entity (defaults to "id" if not specified)
  string target_field = 3;
  
  // Reference to the inverse edge in the target entity
  // When defined, creates a bidirectional relationship
  // If not explicitly set, will be auto-generated based on pluralization rules
  string inverse_edge = 4;
}

// Field options extend the standard protocol buffer field options
extend google.protobuf.FieldOptions {
  // Identifies this field as a key field for the containing entity
  // For GraphQL federation, this marks a field as part of the entity's key
  // For databases, this could indicate a primary or unique key
  bool key = 50001;

  // Marks a field as external, indicating it's defined in another service
  // For GraphQL federation, this corresponds to the @external directive
  bool external = 50002;

  // Specifies that this field requires fields from another service
  // For GraphQL federation, this corresponds to the @requires directive
  string requires = 50003;

  // Specifies that this field is computed from fields of other services
  // For GraphQL federation, this corresponds to the @computed directive
  string computed_from = 50004;
  
  // Defines a relationship to another entity across service boundaries
  // Similar to ent framework's edge definitions
  Relationship edge = 50005;
}

// Message options extend the standard protocol buffer message options
extend google.protobuf.MessageOptions {
  // Identifies this message as an entity
  // An entity represents a distinct object type with its own identity
  // For GraphQL, this indicates a type that participates in federation
  // For databases, this could represent a table or document type
  bool entity = 50001;

  // Specifies the resolvers for this entity in other services
  // For GraphQL federation, this helps with proper reference resolution
  repeated string provides = 50002;
  
  // Defines all relationships (edges) this entity has with other entities
  // Useful for schema generation and documentation
  repeated Relationship edges = 50003;
}

// Service options extend the standard protocol buffer service options
extend google.protobuf.ServiceOptions {
  // Indicates this service should be included in the federated graph
  bool federated = 50001;

  // Specifies the service name in the federation
  // If not provided, the proto service name will be used
  string service_name = 50002;
}
