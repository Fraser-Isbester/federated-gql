{{- /*
    GraphQL Federation Schema Template for Protobuf
    Generates federated GraphQL schemas based on protobuf definitions with federation metadata
*/}}

{{- /* Main schema definition */ -}}
schema {
  query: Query
  {{- if .MutationServices }}
  mutation: Mutation
  {{- end }}
}

{{- /* Query type extension */ -}}
extend type Query {
  {{- range .Services }}
    {{- if .Federated }}
      {{- range .Methods }}
        {{- if eq .Type "Query" }}
  {{ .Name }}{{ .InputArgs }}: {{ .OutputType }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}
}

{{- /* Entity definitions */ -}}
{{- range .Messages }}
  {{- if .Entity }}
type {{ .Name }} @key(fields: "{{ range $i, $f := .Fields }}{{ if $f.Key }}{{ if gt $i 0 }} {{ end }}{{ $f.Name }}{{ end }}{{ end }}") {
    {{- range .Fields }}
  {{ .Name }}: {{ .GraphQLType }}{{ if .NonNull }}!{{ end }}{{ if .External }} @external{{ end }}
      {{- if .Requires }}
 @requires(fields: "{{ .Requires }}")
      {{- end }}
      {{- if .ComputedFrom }}
 @computed(fields: "{{ .ComputedFrom }}")
      {{- end }}
    {{- end }}

    {{- range .ReferenceMethods }}
  {{ .Name }}{{ .InputArgs }}: {{ .OutputType }}
    {{- end }}
}
  {{- end }}
{{- end }}
