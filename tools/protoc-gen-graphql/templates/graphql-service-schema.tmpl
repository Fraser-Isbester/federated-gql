####################################################
# Code generated by protoc-gen-graphql. DO NOT EDIT.
# Source: {{ .Source }}
####################################################

schema {
  query: Query
  {{- if .MutationServices }}
  mutation: Mutation
  {{- end }}
}

extend type Query {
  {{- range .Services }}
    {{- if .Federated }}
      {{- range .Methods }}
        {{- if eq .Type "Query" }}
  {{- if .Comment }}
  """
  {{ .Comment | trim }}
  """
  {{- end }}
  {{ .Name }}{{ .InputArgs }}: {{ .OutputType }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}
}
{{- if .MutationServices }}

extend type Mutation {
  {{- range .Services }}
    {{- if .Federated }}
      {{- range .Methods }}
        {{- if eq .Type "Mutation" }}
  {{- if .Comment }}
  """
  {{ .Comment | trim }}
  """
  {{- end }}
  {{ .Name }}{{ .InputArgs }}: {{ .OutputType }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}
}
{{- end }}

{{ range .Messages }}
  {{- if .Entity }}
{{- if .Comment }}
"""
{{ .Comment | trim }}
"""
{{- end }}
type {{ .Name }} @key(fields: "{{ $keyFields := "" }}{{ range $i, $f := .Fields }}{{ if and $f.Key (eq $i 0) }}{{ $f.Name }}{{ $keyFields = $f.Name }}{{ end }}{{ end }}") {
    {{- range .Fields }}
  {{- if .Comment }}
  """
  {{ .Comment | trim }}
  """
  {{- end }}
  {{ .Name }}: {{ .GraphQLType }}{{ if .NonNull }}!{{ end }}{{ if .External }} @external{{ end }}
      {{- if .Requires }}
 @requires(fields: "{{ .Requires }}")
      {{- end }}
      {{- if .ComputedFrom }}
 @computed(fields: "{{ .ComputedFrom }}")
      {{- end }}
    {{ end }}

    {{- range .ReferenceMethods }}
  {{ .Name }}{{ .InputArgs }}: {{ .OutputType }}
    {{- end }}

    {{- if eq .Name "Order" }}
  # Reference to the user who placed this order
  user: User @requires(fields: "user_id")
    {{- end }}
}
  {{- end }}
{{- end }}

# Generate extensions for User type if we have Order type with user_id field
{{- $hasOrderWithUserId := false }}
{{- range .Messages }}
  {{- if eq .Name "Order" }}
    {{- range .Fields }}
      {{- if eq .Name "user_id" }}
        {{- $hasOrderWithUserId = true }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}

{{- if $hasOrderWithUserId }}
extend type User @key(fields: "userID") {
  # Orders placed by this user
  orders: [Order] @requires(fields: "userID")
}
{{- end }}
