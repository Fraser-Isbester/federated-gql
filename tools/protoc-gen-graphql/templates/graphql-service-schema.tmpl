{{ $schema := schema . -}}
####################################################
# Code generated by protoc-gen-graphql. DO NOT EDIT.
# Source: {{ .Location.SourceFile }}
# Service: {{ $schema.ServiceName }}
####################################################

{{ if $schema.RootQuery.Fields -}}
# Root Query entry point for {{ $schema.ServiceName }} service
extend type Query {
  {{ lower $schema.ServiceName }}: {{$schema.ServiceName}}Service!
}

# Service-specific queries for {{ $schema.ServiceName }}
type {{$schema.ServiceName}}Service {
{{- range $field := $schema.RootQuery.Fields }}
  {{- if $field.Comment }}
  # {{ $field.Comment }}
  {{- end }}
  {{ trimPrefix $field.Name "get" | lower }}(input: ProductInput!): Product{{ if $field.IsRequired }}!{{ end }}
{{- end }}
}
{{ end -}}

{{ range $type := $schema.Types -}}
{{ if not (eq $type.Name "Query") -}}
{{- if $type.Comment }}
# {{ $type.Comment }}
{{- end }}
type Product @key(fields: "id") {
{{- range $field := $type.Fields }}
  {{- if $field.Comment }}
  # {{ $field.Comment }}
  {{- end }}
  {{- $fieldName := $field.Name -}}
  {{- if eq $fieldName "productId" -}}
    {{- $fieldName = "id" -}}
  {{- end -}}
  {{- $fieldType := $field.Type -}}
  {{- if isIDField $fieldName -}}
    {{- if ne $fieldType "ID" -}}
      {{- $fieldType = "ID" -}}
    {{- end -}}
  {{- else if hasSuffix $fieldName "name" -}}
    {{- if eq $fieldType "ID" -}}
      {{- $fieldType = "String" -}}
    {{- end -}}
  {{- end }}
  {{ $fieldName }}: {{ $fieldType }}{{ if $field.IsRequired }}!{{ end }}
{{- end }}
}
{{ end -}}
{{ end -}}

{{ range $input := $schema.Inputs -}}
{{- if $input.Comment }}
# {{ $input.Comment }}
{{- end }}
input ProductInput {
{{- range $field := $input.Fields }}
  {{- if $field.Comment }}
  # {{ $field.Comment }}
  {{- end }}
  {{- $fieldName := $field.Name -}}
  {{- if eq $fieldName "productId" -}}
    {{- $fieldName = "id" -}}
  {{- end }}
  {{ $fieldName }}: {{ $field.Type }}{{ if $field.IsRequired }}!{{ end }}
{{- end }}
}
{{ end -}}